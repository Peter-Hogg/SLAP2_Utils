
% Example usage
[myWin, winRect] = CreateStimWindow();

daqDevice = 'Dev1'; % Replace with your DAQ device name or ID
channel = 'ai1';   % Replace with the channel you want to listen to
threshold =4.8;   % Adjust the threshold as needed
callback = @myCallbackFunction; % Replace with your custom callback function
listenForRisingEdge(daqDevice, channel, threshold, callback);





function listenForRisingEdge(daqDevice, channel, threshold, callback)
    persistent DAQ6001,
    % Listen for a rising edge on the specified channel of the DAQ device.
    % When a rising edge is detected, execute the provided callback function.

    % Create a DAQ session
    DAQ6001 = daq.createSession('ni');
  
    % Add an analog input channel (or digital input channel) for listening
    ai1 = addAnalogInputChannel(DAQ6001, daqDevice, channel, 'Voltage');
    
    % Configure the input range and trigger settings
    DAQ6001.Rate = 1000; % Set the sample rate (adjust as needed)
    s.IsContinuous = true;
    DAQ6001.TriggersPerRun = 1;    
    % Define the trigger condition (rising edge detection)
    lh = DAQ6001.addlistener('DataAvailable', @(src, event) detectRisingEdge(event, threshold, callback));
    
    % Start the DAQ session
    startForeground(DAQ6001);


    function detectRisingEdge(event, threshold, callback)
        data = event.Data
        % Check for a rising edge (assuming the input is a voltage signal)
        if any(event.Data > threshold) %&& data(end-1) <= threshold
            % Rising edge detected, execute the callback
            callback();
           
        end
    end
    
    
    % Define your custom callback function
    function myCallbackFunction()
        disp('Rising edge detected!'); % Replace with your desired action
        delete(lh)
    
        [t, sType, angle, speed] = pseudoRandGrating(myWin, r, DAQ6001)
    end
end


